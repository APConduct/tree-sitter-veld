# Test fn_block_lambda with parameters to verify highlighting

let simple_fn = fn()
    42
end

let fn_with_param = fn(x: i32)
    x * 2
end

let fn_with_multiple_params = fn(name: str, age: i32, active: bool)
    if active then
        name + " is " + age.to_string()
    else
        "inactive user"
    end
end

let fn_with_return_type = fn(data: [i32]) -> str
    data.length().to_string()
end

let fn_with_complex_types = fn(mapper: i32 -> str, values: [i32]) -> [str]
    values.map(mapper)
end

# Test nested fn lambdas
let nested_example = fn(multiplier: i32)
    let inner = fn(x: i32) x * multiplier end
    inner
end
